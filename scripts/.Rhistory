color="blue")
ggplot(resLFC.ordered,
aes(x=log2FoldChange,y=-log10(padj))) +
geom_point() +
geom_point(data=subset(resLFC.ordered, log2FoldChange>0&padj < 0.05),
color="red") +
geom_point(data=subset(resLFC.ordered, log2FoldChange<0&padj < 0.05),
color="blue")
ggplot(resLFC.ordered,
aes(x=log2FoldChange,y=-log10(padj))) +
geom_point() +
geom_point(data=subset(resLFC.ordered, log2FoldChange>0&padj < 0.05),
color="red") +
geom_point(data=subset(resLFC.ordered, log2FoldChange<0&padj < 0.05),
color="blue") +
theme_bw()
names(resLFC)
plotMA(resLFC, ylim=c(-2.5,2.5),
main = paste(res_comb[[i]],collapse = " Vs. "))
ggplot(resLFC.ordered,
aes(x=baseMean,y=log2FoldChange))
ggplot(resLFC.ordered,
aes(x=baseMean,y=log2FoldChange)) +
geom_point() +
theme_bw()
plotMA(resLFC, ylim=c(-2.5,2.5),
main = paste(res_comb[[i]],collapse = " Vs. "))
plotMA
plotMA()
?plotMA()
print(plotMA)
View(plotMA)
ggplot(resLFC.ordered,
aes(x=log2(baseMean),y=log2FoldChange)) +
geom_point() +
theme_bw()
ggplot(resLFC.ordered,
aes(x=log2(baseMean),y=log2FoldChange)) +
geom_point(data=subset(resLFC.ordered, log2FoldChange>0&padj < 0.05),
color="red") +
geom_point(data=subset(resLFC.ordered, log2FoldChange<0&padj < 0.05),
color="blue") +
geom_point() +
theme_bw()
ggplot(resLFC.ordered,
aes(x=log2(baseMean),y=log2FoldChange)) +
geom_point() +
geom_point(data=subset(resLFC.ordered, log2FoldChange>0&padj < 0.05),
color="red") +
geom_point(data=subset(resLFC.ordered, log2FoldChange<0&padj < 0.05),
color="blue") +
theme_bw()
ggplot(resLFC.ordered,
aes(x=log2FoldChange,y=-log10(padj))) +
geom_point() +
geom_point(data=subset(resLFC.ordered, log2FoldChange>0&padj < 0.05),
color="red") +
geom_point(data=subset(resLFC.ordered, log2FoldChange<0&padj < 0.05),
color="blue") +
theme_bw()
resLFC.ordered[1:12]
resLFC.ordered[1:20,]
top_genes <- resLFC.ordered$ENSEMBL[1:20,]
resLFC.ordered <- as.data.frame(resLFC) %>%
rownames_to_column("ENSEMBL") %>%
arrange(padj)
top_genes <- resLFC.ordered$ENSEMBL[1:20]
top_genes
getBM(attributes = attributeNames,
filters = "ensembl_gene_id",
values=top_genes,
mart=ensembl)
resLFC.ordered <- as.data.frame(resLFC) %>%
rownames_to_column("ENSEMBL") %>%
arrange(padj)
getBM(attributes = attributeNames,
filters = "ensembl_gene_id",
values=top_genes,
mart=ensembl)
attributeNames <- c('ensembl_gene_id', 'entrenzgene', 'external_gene_name')
getBM(attributes = attributeNames,
filters = "ensembl_gene_id",
values=top_genes,
mart=ensembl)
listAttributes(ensembl)
grep("gene",listAttributes(ensembl))
grep("gene",listAttributes(ensembl),value=T)
listAttributes(ensembl)
attributeNames <- c('ensembl_gene_id', 'external_gene_name',entrezgene_description)
attributeNames <- c('ensembl_gene_id', 'external_gene_name',"entrezgene_description")
top_genes <- resLFC.ordered$ENSEMBL[1:20]
getBM(attributes = attributeNames,
filters = "ensembl_gene_id",
values=top_genes,
mart=ensembl)
top_genes
getBM(attributes = attributeNames,
filters = "ensembl_gene_id",
values=top_genes,
mart=ensembl)
ensembl=useMart("ENSEMBL_MART_ENSEMBL")
# list the available datasets (species). Replace mouse with the name of your organism
listDatasets(ensembl) %>%
dplyr::filter(grepl("Human",description))
ensembl = useDataset("hsapiens_gene_ensembl", mart=ensembl)
getBM(attributes = attributeNames,
filters = "ensembl_gene_id",
values=top_genes,
mart=ensembl)
ensembl
top_genes
?getBM
res_comb
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(message = FALSE)
dir="~/OneDrive - NYU Langone Health/Collaboration/Zeda Zhang/"
knitr::opts_knit$set(root.dir = dir)
library("DESeq2")
library("RColorBrewer")
library("ggplot2")
library("BiocParallel")
library(readxl)
library(dplyr)
library(tibble) # for function rownames_to_column
library("BiocParallel")
register(MulticoreParam(10))
library(biomaRt) # for annotation
library("DESeq2")
library("RColorBrewer")
library("ggplot2")
library("BiocParallel")
library(readxl)
library(dplyr)
library(tibble) # for function rownames_to_column
library("BiocParallel")
register(MulticoreParam(10))
library(biomaRt) # for annotation
# metadata
metadata_hs = as.data.frame(read_excel("metadata_hs.xlsx")) %>%
dplyr::mutate(condition = paste(Serum,Treatment,sep="-"))
metadata_mm = as.data.frame(read_excel("metadata_mm.xlsx"))
row.names(metadata_hs) = metadata_hs$SampleId
row.names(metadata_mm) = metadata_mm$SampleId
# gene count data - mouse
genecount_mm = read.csv("20191115_RNAseq_mouse/DESeq2/gene_count_matrix.csv",
check.names = F,row.names = 1)
genecount_hs = read.csv("20191115_RNAseq_human_hg38/DESeq2//gene_count_matrix.csv",
check.names = F,row.names = 1)
# prefilter total count >=10
genecount_mm = genecount_mm[rowSums(genecount_mm)>=10,]
genecount_hs = genecount_hs[rowSums(genecount_hs)>=10,]
## Human
PCA_hs = princomp(genecount_hs)
PCA_hs$sdev[1:2]/sum(PCA_hs$sdev)
PCA_hs$loadings[,c(1,2)] %>%
data.frame() %>%
dplyr::mutate(SampleId = colnames(genecount_hs)) %>%
dplyr::left_join(metadata_hs) %>%
ggplot(aes(x=Comp.1,y=Comp.2)) +
geom_point(size=3,alpha=0.8,
aes(color=Treatment,
shape=Serum)) +
labs(x="PC1 (60%)",y="PC2 (10%)") +
theme_bw() +
ggsave("PCA_hp.pdf",height = 5,width = 6)
## Mouse
PCA_mm = princomp(genecount_mm)
PCA_mm$sdev[1:2]/sum(PCA_mm$sdev)
PCA_mm$loadings[,c(1,2)] %>%
data.frame() %>%
dplyr::mutate(SampleId = colnames(genecount_mm)) %>%
dplyr::left_join(metadata_mm) %>%
ggplot(aes(x=Comp.1,y=Comp.2)) +
geom_point(size=3,alpha=0.8,
aes(color=Treatment,
shape=Serum)) +
facet_grid(~Cell_line) +
labs(x="PC1 (55%)",y="PC2 (12%)") +
theme_bw() +
ggsave("PCA_mm.pdf",height = 3,width = 7)
dds <- DESeqDataSetFromMatrix(countData = genecount_hs,
colData = metadata_hs,
design= ~ Serum + Treatment)
dds$group = factor(paste0(dds$Serum, dds$Treatment))
design(dds) <- ~ group
dds <- DESeq(dds)
# results(dds,contrast = c("group","FBSDMSO","FBSNRG1"))
# list the available datasets (species). Replace mouse with the name of your organism
listDatasets(ensembl) %>%
dplyr::filter(grepl("Human",description))
listMarts()
# listMarts()
ensembl=useMart("ENSEMBL_MART_ENSEMBL")
attributeNames <- c('ensembl_gene_id', 'external_gene_name','entrezgene_description')
condition = c("group","FBSDMSO","FBSNRG1")
resLFC <- lfcShrink(dds, contrast = c("group",condition))
dds$group
resLFC <- lfcShrink(dds, contrast = c("group",condition))
condition = c("FBSDMSO","FBSNRG1")
resLFC <- lfcShrink(dds, contrast = c("group",condition))
resLFC.ordered <- as.data.frame(resLFC) %>%
rownames_to_column("ENSEMBL") %>%
arrange(padj)
top_genes <- resLFC.ordered$ENSEMBL[1:20]
getBM(attributes = attributeNames,
filters = "ensembl_gene_id",
values=top_genes,
mart=ensembl)
ensembl
ensembl = useDataset("hsapiens_gene_ensembl", mart=ensembl)
ensembl
getBM(attributes = attributeNames,
filters = "ensembl_gene_id",
values=top_genes,
mart=ensembl)
# listFilters(ensembl) %>%
#     filter(grepl("ensembl",name))
#
listAttributes(ensembl)
attributeNames <- c('ensembl_gene_id', 'external_gene_name','entrezgene_description',"ensembl_gene_id_version")
getBM(attributes = attributeNames,
filters = "ensembl_gene_id_version",
values=top_genes,
mart=ensembl)
getBM(attributes = attributeNames,
filters = "ensembl_transcript_id",
values=top_genes,
mart=ensembl)
top_genes
strsplit(top_genes,split = ".")
strsplit(top_genes,split = ".",fixed=T)
?sub
gsub(".\.","",top_genes)
gsub("\\..","",top_genes)
gsub("\.*","",top_genes)
gsub("\\.*","",top_genes)
top_genes = gsub("\\.*","",top_genes)
attributeNames <- c('ensembl_gene_id', 'external_gene_name','entrezgene_description')
getBM(attributes = attributeNames,
filters = 'ensembl_gene_id',
values=top_genes,
mart=ensembl)
top_genes = gsub("\\..*","",top_genes)
top_genes <- resLFC.ordered$ENSEMBL[1:20]
top_genes = gsub("\\.*","",top_genes)
top_genes
top_genes = gsub("\\.*","",resLFC.ordered$ENSEMBL[1:20])
top_genes
# top_genes =
gsub("\\..","",resLFC.ordered$ENSEMBL[1:20])
# top_genes =
gsub("\\..*","",resLFC.ordered$ENSEMBL[1:20])
top_genes = gsub("\\..*","",resLFC.ordered$ENSEMBL[1:20])
getBM(attributes = attributeNames,
filters = 'ensembl_gene_id',
values=top_genes,
mart=ensembl)
geneNames = getBM(attributes = attributeNames,
filters = 'ensembl_gene_id',
values=gsub("\\..*","",resLFC.ordered$ENSEMBL),
mart=ensembl)
geneNames = getBM(attributes = c('ensembl_gene_id', 'external_gene_name','entrezgene_description'),
filters = 'ensembl_gene_id',
values=top_genes,
mart=ensembl)
ggplot(resLFC.ordered,
aes(x=log2(baseMean),y=log2FoldChange)) +
geom_point() +
geom_point(data=subset(resLFC.ordered, log2FoldChange>0&padj < 0.05),
color="red") +
geom_point(data=subset(resLFC.ordered, log2FoldChange<0&padj < 0.05),
color="blue") +
theme_bw()
geneNames
resLFC.ordered <- as.data.frame(resLFC) %>%
rownames_to_column("ensembl_gene_id") %>%
arrange(padj)
annotation = resLFC.ordered %>%
dplyr::filter(ensembl_gene_id %in% top_genes) %>%
dplyr::left_join(geneNames )
library(ggrepel)
ggplot(resLFC.ordered,
aes(x=log2(baseMean),y=log2FoldChange)) +
geom_point() +
geom_point(data=subset(resLFC.ordered, log2FoldChange>0&padj < 0.05),
color="red") +
geom_point(data=subset(resLFC.ordered, log2FoldChange<0&padj < 0.05),
color="blue") +
geom_text_repel(data = annotion) +
theme_bw()
ggplot(resLFC.ordered,
aes(x=log2(baseMean),y=log2FoldChange)) +
geom_point() +
geom_point(data=subset(resLFC.ordered, log2FoldChange>0&padj < 0.05),
color="red") +
geom_point(data=subset(resLFC.ordered, log2FoldChange<0&padj < 0.05),
color="blue") +
geom_text_repel(data = annotation) +
theme_bw()
ggplot(resLFC.ordered,
aes(x=log2(baseMean),y=log2FoldChange)) +
geom_point() +
geom_point(data=subset(resLFC.ordered, log2FoldChange>0&padj < 0.05),
color="red") +
geom_point(data=subset(resLFC.ordered, log2FoldChange<0&padj < 0.05),
color="blue") +
geom_text_repel(data = annotation,labels = external_gene_name) +
theme_bw()
ggplot(resLFC.ordered,
aes(x=log2(baseMean),y=log2FoldChange)) +
geom_point() +
geom_point(data=subset(resLFC.ordered, log2FoldChange>0&padj < 0.05),
color="red") +
geom_point(data=subset(resLFC.ordered, log2FoldChange<0&padj < 0.05),
color="blue") +
geom_text_repel(data = annotation,aes(alabels = external_gene_name)) +
theme_bw()
ggplot(resLFC.ordered,
aes(x=log2(baseMean),y=log2FoldChange)) +
geom_point() +
geom_point(data=subset(resLFC.ordered, log2FoldChange>0&padj < 0.05),
color="red") +
geom_point(data=subset(resLFC.ordered, log2FoldChange<0&padj < 0.05),
color="blue") +
geom_text_repel(data = annotation,aes(labels = external_gene_name)) +
theme_bw()
?geom_text_repel
ggplot(resLFC.ordered,
aes(x=log2(baseMean),y=log2FoldChange)) +
geom_point() +
geom_point(data=subset(resLFC.ordered, log2FoldChange>0&padj < 0.05),
color="red") +
geom_point(data=subset(resLFC.ordered, log2FoldChange<0&padj < 0.05),
color="blue") +
geom_text_repel(data = annotation,aes(label = external_gene_name)) +
theme_bw()
annotation
resLFC.ordered <- as.data.frame(resLFC) %>%
rownames_to_column("ensembl") %>%
dplyr::mutate(ensembl_gene_id = gsub("\\..*","",ensembl)) %>%
arrange(padj)
top_genes = resLFC.ordered$ensembl_gene_id[1:20]
annotation = resLFC.ordered %>%
dplyr::filter(ensembl_gene_id %in% top_genes) %>%
dplyr::left_join(geneNames )
annotation
ggplot(resLFC.ordered,
aes(x=log2(baseMean),y=log2FoldChange)) +
geom_point() +
geom_point(data=subset(resLFC.ordered, log2FoldChange>0&padj < 0.05),
color="red") +
geom_point(data=subset(resLFC.ordered, log2FoldChange<0&padj < 0.05),
color="blue") +
geom_text_repel(data = annotation,aes(label = external_gene_name)) +
theme_bw()
ggplot(resLFC.ordered,
aes(x=log2FoldChange,y=-log10(padj))) +
geom_point() +
geom_point(data=subset(resLFC.ordered, log2FoldChange>0&padj < 0.05),
color="red") +
geom_point(data=subset(resLFC.ordered, log2FoldChange<0&padj < 0.05),
color="blue") +
geom_text_repel(data = annotation,aes(label = external_gene_name)) +
theme_bw()
a=ggplot(resLFC.ordered,
aes(x=log2(baseMean),y=log2FoldChange)) +
geom_point() +
geom_point(data=subset(resLFC.ordered, log2FoldChange>0&padj < 0.05),
color="red") +
geom_point(data=subset(resLFC.ordered, log2FoldChange<0&padj < 0.05),
color="blue") +
geom_text_repel(data = annotation,aes(label = external_gene_name)) +
theme_bw()
library(cowplot)
plot_grid(a,b,nrow=1)
b=ggplot(resLFC.ordered,
aes(x=log2FoldChange,y=-log10(padj))) +
geom_point() +
geom_point(data=subset(resLFC.ordered, log2FoldChange>0&padj < 0.05),
color="red") +
geom_point(data=subset(resLFC.ordered, log2FoldChange<0&padj < 0.05),
color="blue") +
geom_text_repel(data = annotation,aes(label = external_gene_name)) +
theme_bw()
plot_grid(a,b,nrow=1)
res_comb = combn(levels(dds$group),m = 2,simplify = F)
for (i in 1:length(res_comb)) {
resLFC <- lfcShrink(dds, contrast = c("group",condition))
resLFC.ordered <- as.data.frame(resLFC) %>%
rownames_to_column("ensembl") %>%
dplyr::mutate(ensembl_gene_id = gsub("\\..*","",ensembl)) %>%
arrange(padj)
top_genes = resLFC.ordered$ensembl_gene_id[1:20]
geneNames = getBM(attributes = c('ensembl_gene_id_gene_id', 'external_gene_name','entrezgene_description'),
filters = 'ensembl_gene_id_gene_id',
values=top_genes,
mart=ensembl_gene_id)
annotation = resLFC.ordered %>%
dplyr::filter(ensembl_gene_id %in% top_genes) %>%
dplyr::left_join(geneNames )
a= ggplot(resLFC.ordered,
aes(x=log2(baseMean),y=log2FoldChange)) +
geom_point() +
geom_point(data=subset(resLFC.ordered, log2FoldChange>0&padj < 0.05),
color="red") +
geom_point(data=subset(resLFC.ordered, log2FoldChange<0&padj < 0.05),
color="blue") +
geom_text_repel(data = annotation,aes(label = external_gene_name))
theme_bw()
b=ggplot(resLFC.ordered,
aes(x=log2FoldChange,y=-log10(padj))) +
geom_point() +
geom_point(data=subset(resLFC.ordered, log2FoldChange>0&padj < 0.05),
color="red") +
geom_point(data=subset(resLFC.ordered, log2FoldChange<0&padj < 0.05),
color="blue") +
geom_text_repel(data = annotation,aes(label = external_gene_name)) +
theme_bw()
plot_grid(a,b,nrow=1) +
ggsave(paste(paste(res_comb[[i]],collapse = "-"),".pdf",sep=""),width = 10,height = 5)
# # res <- results(dds, contrast = c("group",res_comb[[i]]))
#   resLFC <- lfcShrink(dds, contrast = c("group",res_comb[[i]]))
#   pdf(paste(paste(res_comb[[i]],collapse = "-"),".pdf",sep=""))
#   plotMA(resLFC, ylim=c(-2.5,2.5),
#          main = paste(res_comb[[i]],collapse = " Vs. "))
#   dev.off()
}
res_comb = combn(levels(dds$group),m = 2,simplify = F)
for (i in 1:length(res_comb)) {
resLFC <- lfcShrink(dds, contrast = c("group",condition))
resLFC.ordered <- as.data.frame(resLFC) %>%
rownames_to_column("ensembl") %>%
dplyr::mutate(ensembl_gene_id = gsub("\\..*","",ensembl)) %>%
arrange(padj)
top_genes = resLFC.ordered$ensembl_gene_id[1:20]
geneNames = getBM(attributes = c('ensembl_gene_id_gene_id', 'external_gene_name','entrezgene_description'),
filters = 'ensembl_gene_id_gene_id',
values=top_genes,
mart=ensembl_gene_id)
annotation = resLFC.ordered %>%
dplyr::filter(ensembl_gene_id %in% top_genes) %>%
dplyr::left_join(geneNames )
a= ggplot(resLFC.ordered,
aes(x=log2(baseMean),y=log2FoldChange)) +
geom_point() +
geom_point(data=subset(resLFC.ordered, log2FoldChange>0&padj < 0.05),
color="red") +
geom_point(data=subset(resLFC.ordered, log2FoldChange<0&padj < 0.05),
color="blue") +
geom_text_repel(data = annotation,aes(label = external_gene_name))
theme_bw()
b=ggplot(resLFC.ordered,
aes(x=log2FoldChange,y=-log10(padj))) +
geom_point() +
geom_point(data=subset(resLFC.ordered, log2FoldChange>0&padj < 0.05),
color="red") +
geom_point(data=subset(resLFC.ordered, log2FoldChange<0&padj < 0.05),
color="blue") +
geom_text_repel(data = annotation,aes(label = external_gene_name)) +
theme_bw()
plot_grid(a,b,nrow=1) +
ggsave(paste(paste(res_comb[[i]],collapse = "-"),".pdf",sep=""),width = 10,height = 5)
# # res <- results(dds, contrast = c("group",res_comb[[i]]))
#   resLFC <- lfcShrink(dds, contrast = c("group",res_comb[[i]]))
#   pdf(paste(paste(res_comb[[i]],collapse = "-"),".pdf",sep=""))
#   plotMA(resLFC, ylim=c(-2.5,2.5),
#          main = paste(res_comb[[i]],collapse = " Vs. "))
#   dev.off()
}
res_comb = combn(levels(dds$group),m = 2,simplify = F)
for (i in 1:length(res_comb)) {
resLFC <- lfcShrink(dds, contrast = c("group",condition))
resLFC.ordered <- as.data.frame(resLFC) %>%
rownames_to_column("ensembl") %>%
dplyr::mutate(ensembl_gene_id = gsub("\\..*","",ensembl)) %>%
arrange(padj)
top_genes = resLFC.ordered$ensembl_gene_id[1:20]
geneNames = getBM(attributes = c('ensembl_gene_id', 'external_gene_name','entrezgene_description'),
filters = 'ensembl_gene_id',
values=top_genes,
mart=ensembl_gene_id)
annotation = resLFC.ordered %>%
dplyr::filter(ensembl_gene_id %in% top_genes) %>%
dplyr::left_join(geneNames )
a= ggplot(resLFC.ordered,
aes(x=log2(baseMean),y=log2FoldChange)) +
geom_point() +
geom_point(data=subset(resLFC.ordered, log2FoldChange>0&padj < 0.05),
color="red") +
geom_point(data=subset(resLFC.ordered, log2FoldChange<0&padj < 0.05),
color="blue") +
geom_text_repel(data = annotation,aes(label = external_gene_name))
theme_bw()
b=ggplot(resLFC.ordered,
aes(x=log2FoldChange,y=-log10(padj))) +
geom_point() +
geom_point(data=subset(resLFC.ordered, log2FoldChange>0&padj < 0.05),
color="red") +
geom_point(data=subset(resLFC.ordered, log2FoldChange<0&padj < 0.05),
color="blue") +
geom_text_repel(data = annotation,aes(label = external_gene_name)) +
theme_bw()
plot_grid(a,b,nrow=1) +
ggsave(paste(paste(res_comb[[i]],collapse = "-"),".pdf",sep=""),width = 10,height = 5)
# # res <- results(dds, contrast = c("group",res_comb[[i]]))
#   resLFC <- lfcShrink(dds, contrast = c("group",res_comb[[i]]))
#   pdf(paste(paste(res_comb[[i]],collapse = "-"),".pdf",sep=""))
#   plotMA(resLFC, ylim=c(-2.5,2.5),
#          main = paste(res_comb[[i]],collapse = " Vs. "))
#   dev.off()
}
I
